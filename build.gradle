buildscript {
    ext.kotlinVersion = '1.2.31'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

group 'com.github.thibseisel'
version '1.0.0'

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
}

ext {
    koroutinesVersion = '0.22.5'
    okHttpVersion = '3.10.0'
    jacksonVersion = '2.9.0'
    daggerVersion = '2.15'
    log4jVersion = '2.11.0'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$koroutinesVersion"

    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"

    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"

    testCompile 'junit:junit:4.12'
}

sourceSets.main.java.srcDir file("$buildDir/generated/source/kapt/main")

idea {
    module {
        generatedSourceDirs += file("$buildDir/generated/source/kapt/main")
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.thibseisel.mangabind.AppKt'
    }

    // Create a fatJar containing all dependencies.
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}